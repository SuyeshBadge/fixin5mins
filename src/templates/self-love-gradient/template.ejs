<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Self-Love Gradient Template</title>
  <style>
    /* Import fonts that are similar to "The Young Serif" and "Burgues Script" */
    @import url('https://fonts.googleapis.com/css2?family=DM+Serif+Display:ital@0;1&family=Cormorant+Garamond:ital,wght@0,300;0,400;0,500;0,600;0,700;1,400;1,600&family=Poppins:wght@300;400;500;600&family=Playfair+Display:ital,wght@0,400;0,500;0,600;0,700;0,800;0,900;1,400;1,500;1,600&family=Alex+Brush&family=Tangerine:wght@400;700&family=Great+Vibes&display=swap');
    
    body {
      margin: 0;
      padding: 0;
      font-family: 'Poppins', sans-serif;
    }
    
    .container {
      width: 1080px;
      height: 1080px;
      position: relative;
      /* Gradient background from light blue/lavender to pinkish-orange */
      background: linear-gradient(135deg, rgba(215,225,245,1) 0%, rgba(242,219,231,1) 50%, rgba(255,210,190,1) 100%);
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      padding: 60px;
      box-sizing: border-box;
    }
    
    .header {
      position: relative;
      display: flex;
      justify-content: space-between;
      align-items: center;
      width: 100%;
      height: 60px; /* Fixed height for positioning */
      margin-bottom: 40px;
      z-index: 1;
    }
    
    .fixed-text {
      font-size: 16px;
      font-weight: 400;
      letter-spacing: 1px;
      color: rgba(0, 0, 0, 0.6);
      font-family: 'Poppins', sans-serif;
    }
    
    .date {
      font-size: 16px;
      font-weight: 400;
      letter-spacing: 1px;
      color: rgba(0, 0, 0, 0.6);
      font-family: 'Poppins', sans-serif;
    }
    
    .handle-pill {
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      background-color: #fff;
      border-radius: 30px;
      padding: 8px 25px;
      font-family: 'Poppins', sans-serif;
      font-size: 18px;
      font-weight: 500;
      color: #333;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      letter-spacing: 0.5px;
      text-transform: uppercase;
      z-index: 2;
    }
    
    .content {
      flex-grow: 1;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      text-align: center;
      position: relative;
      z-index: 1;
      padding: 0 40px;
    }
    
    .emotional-hook {
      font-family: 'Playfair Display', serif;
      font-weight: 800;
      font-size: 80px;
      line-height: 1.1;
      color: #333;
      margin-bottom: 30px;
      letter-spacing: -1px;
      text-transform: uppercase;
      text-align: center;
    }
    
    .action-step {
      font-family: 'Great Vibes', cursive;
      font-size: 72px;
      line-height: 1.2;
      color: #333;
      margin-bottom: 40px;
      font-weight: 400;
      text-align: center;
    }
    
    .emotional-reward {
      font-family: 'Cormorant Garamond', serif;
      font-size: 32px;
      line-height: 1.2;
      color: #333;
      margin-top: 40px;
      font-weight: 300;
      font-style: italic;
      text-align: center;
    }
    
    /* Dynamic font sizing */
    @media only screen {
      /* Large hooks get smaller */
      .emotional-hook.large {
        font-size: 70px;
      }
      
      .emotional-hook.x-large {
        font-size: 60px;
      }
      
      /* Large action steps get smaller */
      .action-step.large {
        font-size: 65px;
      }
      
      .action-step.x-large {
        font-size: 56px;
      }
      
      /* Large rewards get smaller */
      .emotional-reward.large {
        font-size: 28px;
      }
      
      .emotional-reward.x-large {
        font-size: 24px;
      }
    }
  </style>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Dynamic font sizing based on content length
      function adjustFontSize(element, lengthThresholds, classNames) {
        if (!element) return;
        
        const text = element.textContent || '';
        const length = text.length;
        
        // Clear any existing classes
        element.classList.remove(...classNames);
        
        // Apply appropriate class based on length
        if (length > lengthThresholds.xLarge) {
          element.classList.add(classNames[2]); // x-large class
        } else if (length > lengthThresholds.large) {
          element.classList.add(classNames[1]); // large class
        } else {
          element.classList.add(classNames[0]); // normal class
        }
      }
      
      // Elements to adjust
      const hookElement = document.querySelector('.emotional-hook');
      const actionElement = document.querySelector('.action-step');
      const rewardElement = document.querySelector('.emotional-reward');
      
      // Font size classes
      const fontClasses = ['normal', 'large', 'x-large'];
      
      // Adjust each element with appropriate thresholds
      if (hookElement) {
        adjustFontSize(hookElement, { large: 20, xLarge: 35 }, fontClasses);
      }
      
      if (actionElement) {
        adjustFontSize(actionElement, { large: 30, xLarge: 45 }, fontClasses);
      }
      
      if (rewardElement) {
        adjustFontSize(rewardElement, { large: 40, xLarge: 60 }, fontClasses);
      }
      
      // Set current date if not provided
      const dateElement = document.querySelector('.date');
      if (dateElement && dateElement.textContent.trim() === '') {
        const options = { year: 'numeric', month: 'long', day: 'numeric' };
        const currentDate = new Date().toLocaleDateString(undefined, options);
        dateElement.textContent = currentDate;
      }
    });
  </script>
</head>
<body>
  <div class="container">
    <div class="header">
      <div class="fixed-text">Fix Your Life in 5 Minutes</div>
      <div class="handle-pill">@<%= handle %></div>
      <div class="date"><%= date || '' %></div>
    </div>
    
    <div class="content">
      <div class="emotional-hook normal"><%= emotionalHook %></div>
      <div class="action-step normal"><%= actionStep %></div>
    </div>
    
    <div class="emotional-reward normal"><%= emotionalReward %></div>
  </div>
</body>
</html> 